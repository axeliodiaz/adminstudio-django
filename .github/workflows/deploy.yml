name: Deploy to EC2 (Docker Compose)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DJANGO_ENV: prod
      DJANGO_SETTINGS_MODULE: adminstudio_django.settings.prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Archive source (git archive)
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git archive --format=tar.gz -o app.tar.gz HEAD

      - name: Prepare remote directory
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            mkdir -p "${{ secrets.EC2_PATH }}"

      - name: Upload package to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "app.tar.gz"
          target: ${{ secrets.EC2_PATH }}
          overwrite: true

      - name: Build & Up via SSH (Docker Compose)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -euo pipefail
            cd "${{ secrets.EC2_PATH }}"
            tar -xzf app.tar.gz && rm -f app.tar.gz
            docker compose down --remove-orphans || true
            docker compose up -d --build
            for i in {1..30}; do
              if curl -fsS http://localhost/healthcheck > /dev/null; then
                echo "App healthy ✅"; exit 0
              fi
              sleep 3
            done
            echo "Healthcheck failed ❌"; docker compose logs --no-color --timestamps | tail -n 200; exit 1